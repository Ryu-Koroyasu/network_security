# docker-compose.yml
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile # 必要に応じてDockerfileを分ける
    container_name: nginx_proxy
    # NginxのアクセスログとエラーログをSuricataとFail2banが共有できるようにボリュームマウント
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx # Nginxのログを名前付きボリュームに保存
    ports:
      - "8080:8080"
      - "443:443" # HTTPSが必要な場合
    networks:
      - internal_network
      - external_network # 外部からのアクセスを受けるネットワーク
    depends_on:
      - flask_app

  flask_app:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    container_name: flask_app
    ports:
      - "5000:8080"
    networks:
      - internal_network

  suricata:
    build:
      context: ./suricata
      dockerfile: Dockerfile # Suricata用のDockerfile
    container_name: suricata_ids
    # SuricataのIDSモード（ネットワーク監視）
    volumes:
      - suricata_logs:/var/log/suricata
    networks:
      - internal_network # 同じネットワークに属することで、コンテナ間のトラフィックを監視可能
    cap_add:
      - NET_ADMIN # ネットワークインターフェース監視に必要
      - NET_RAW   # RAWソケットの使用に必要
      - SYS_NICE  # スケジューリング優先度設定に必要
    restart: unless-stopped

# 永続化のためのボリューム定義
volumes:
  nginx_logs: # Nginxログ用
  suricata_logs: # Suricataログ用
  # fail2ban_logs: # Fail2banはホストOSにインストールするため削除

# ネットワーク定義
networks:
  internal_network: # コンテナ間通信用
    driver: bridge
  external_network: # 外部公開用
    driver: bridge